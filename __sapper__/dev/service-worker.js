/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/service-worker.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/node_modules/@sapper/service-worker.js":
/*!****************************************************!*\
  !*** ./src/node_modules/@sapper/service-worker.js ***!
  \****************************************************/
/*! exports provided: timestamp, files, assets, shell, routes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"timestamp\", function() { return timestamp; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"files\", function() { return files; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"assets\", function() { return files; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"shell\", function() { return shell; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"routes\", function() { return routes; });\n// This file is generated by Sapper â€” do not edit it!\nconst timestamp = 1592634886497;\n\nconst files = [\n\t\"service-worker-index.html\",\n\t\"favicon.png\",\n\t\"global.css\",\n\t\"images/matt-crouch.jpg\",\n\t\"images/pages.png\",\n\t\"images/sapper.png\",\n\t\"images/server-routes.png\",\n\t\"images/svelte.png\",\n\t\"logo-192.png\",\n\t\"logo-512.png\",\n\t\"manifest.json\",\n\t\"normalize.css\"\n];\n // legacy\n\nconst shell = [\n\t\"client/46a4079e92431b9ffc30/0.0.js\",\n\t\"client/46a4079e92431b9ffc30/blog_$slug.blog_$slug.js\",\n\t\"client/46a4079e92431b9ffc30/index.index.js\",\n\t\"client/46a4079e92431b9ffc30/main.js\"\n];\n\nconst routes = [\n\t{ pattern: /^\\/$/ },\n\t{ pattern: /^\\/blog\\/([^\\/]+?)\\/?$/ }\n];\n\n//# sourceURL=webpack:///./src/node_modules/@sapper/service-worker.js?");

/***/ }),

/***/ "./src/service-worker.js":
/*!*******************************!*\
  !*** ./src/service-worker.js ***!
  \*******************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _sapper_service_worker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sapper/service-worker */ \"./src/node_modules/@sapper/service-worker.js\");\n// Generate a service worker (this is created by Sapper)\n\n\n// Make sure a new cache is created for each fresh build\nconst ASSETS = `cache${_sapper_service_worker__WEBPACK_IMPORTED_MODULE_0__[\"timestamp\"]}`;\n\n// `shell` is an array of all the files generated by the bundler,\n// `files` is an array of everything in the `static` directory\nconst toCache = _sapper_service_worker__WEBPACK_IMPORTED_MODULE_0__[\"shell\"].concat(_sapper_service_worker__WEBPACK_IMPORTED_MODULE_0__[\"files\"]);\nconst cached = new Set(toCache);\n\nself.addEventListener(\"install\", event => {\n  // Create a fresh cache and add all static files to it\n  event.waitUntil(\n    caches\n      .open(ASSETS)\n      .then(cache => cache.addAll(toCache))\n      .then(() => {\n        self.skipWaiting();\n      })\n  );\n});\n\nself.addEventListener(\"activate\", event => {\n  // Delete any old caches\n  event.waitUntil(\n    caches.keys().then(async keys => {\n      for (const key of keys) {\n        if (key !== ASSETS) await caches.delete(key);\n      }\n\n      self.clients.claim();\n    })\n  );\n});\n\nself.addEventListener(\"fetch\", event => {\n  // Only intercept GET requests for assets\n  if (event.request.method !== \"GET\" || event.request.headers.has(\"range\")) {\n    return;\n  }\n\n  const url = new URL(event.request.url);\n\n  // Only deal with HTTP/HTTPS requests\n  if (!url.protocol.startsWith(\"http\")) return;\n\n  // Only deal with requests not a part of the development server setup\n  if (\n    url.hostname === self.location.hostname &&\n    url.port !== self.location.port\n  ) {\n    return;\n  }\n\n  // Serve static content from cache if it's available\n  if (url.host === self.location.host && cached.has(url.pathname)) {\n    event.respondWith(caches.match(event.request));\n    return;\n  }\n\n  // Avoid Chromium bug\n  if (event.request.cache === \"only-if-cached\") {\n    return;\n  }\n\n  event.respondWith(\n    // Try and fetch the asset from the server first\n    caches.open(`offline${_sapper_service_worker__WEBPACK_IMPORTED_MODULE_0__[\"timestamp\"]}`).then(async cache => {\n      try {\n        const response = await fetch(event.request);\n        cache.put(event.request, response.clone());\n\n        return response;\n      } catch (err) {\n        // Else respond from the cache\n        const response = await cache.match(event.request);\n\n        if (response) {\n          return response;\n        }\n\n        throw err;\n      }\n    })\n  );\n});\n\n\n//# sourceURL=webpack:///./src/service-worker.js?");

/***/ })

/******/ });